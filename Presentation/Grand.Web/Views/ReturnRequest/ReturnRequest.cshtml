@model SubmitReturnRequestModel
@using Grand.Web.Models.Order;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.ReturnItems").Text);
}
<div class="page return-request-page">
    <h2 class="text-xs-center text-xs-center generalTitle">@string.Format(T("ReturnRequests.Title").Text, Model.OrderNumber)</h2>
    @if (!String.IsNullOrEmpty(Model.Result))
    {
        <div class="result">
            @Model.Result
        </div>
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
                    <div class="AntiForgeryToken mt-2">
                            <h2 class="h4 generalTitle"><strong>@T("ReturnRequests.SelectProduct(s)")</strong></h2>
                        <div class="table-responsive">
                            <table class="table table-hover data-table">
                                <colgroup>
                                    <col />
                                    <col width="200" />
                                    <col width="150" />
                                </colgroup>
                                <thead class="table-inverse">
                                    <tr>
                                        <th class="product">
                                            @T("ReturnRequests.Products.Name")
                                        </th>
                                        <th class="unit-price">
                                            @T("ReturnRequests.Products.Price")
                                        </th>
                                        <th class="quantity">
                                            @T("ReturnRequests.Products.Quantity")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td class="product">
                                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                                @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                                {
                                                    <div class="attributes">
                                                        @Html.Raw(item.AttributeInfo)
                                                    </div>
                                                }
                                            </td>
                                            <td class="unit-price">
                                                @item.UnitPrice
                                            </td>
                                            <td class="quantity">
                                                <select class="custom-select form-control" name="quantity@(item.Id)">
                                                    @for (int i = 0; i <= item.Quantity; i++)
                                                    {
                                                        <option value="@(i)">@(i)</option>
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <h5><strong>@T("ReturnRequests.WhyReturning")</strong></h5>
                    <div class="form-fields">
                        <div class="form-group">
                            @{
                                var reasonsSelectList = Model.AvailableReturnReasons.Select(x => new SelectListItem
                                {
                                    Text = x.Name,
                                    Value = x.Id.ToString()
                                }).ToList();
                            }
                            @Html.LabelFor(model => model.ReturnRequestReasonId, new { @class = "col-form-label" }, ":")
                            @Html.DropDownListFor(model => model.ReturnRequestReasonId, reasonsSelectList, new { @class = "form-control custom-select return-reasons" })
                        </div>
                        <div class="form-group">
                            @{
                                var actionsSelectList = Model.AvailableReturnActions.Select(x => new SelectListItem
                                {
                                    Text = x.Name,
                                    Value = x.Id.ToString()
                                }).ToList();
                            }
                            @Html.LabelFor(model => model.ReturnRequestActionId, new { @class = "col-form-label" }, ":")
                            @Html.DropDownListFor(model => model.ReturnRequestActionId, actionsSelectList, new { @class = "form-control custom-select return-actions" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, new { @class = "col-form-label" }, ":")
                            @Html.TextAreaFor(model => model.Comments, new { @class = "form-control comment" })
                            @Html.ValidationMessageFor(model => model.Comments)
                        </div>
                    </div>
                    <div class="col-12 btn-group mt-1 mb-1">
                        <div class="row">
                            <input type="submit" name="submit-return-request" class="btn btn-secondary submit-return-request-button" value="@T("ReturnRequests.Submit")" />
                        </div>
                    </div>
                }
            }
</div>
