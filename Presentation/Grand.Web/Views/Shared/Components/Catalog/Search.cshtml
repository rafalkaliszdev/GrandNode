@model SearchModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}
@using Grand.Web.Models.Catalog;
<script type="text/javascript">
    $(document).ready(function () {

        $("#@Html.FieldIdFor(model => model.adv)").click(toggleAdvancedSearch);
        toggleAdvancedSearch();
    });

    function toggleAdvancedSearch() {

        if ($('#@Html.FieldIdFor(model => model.adv)').is(':checked')) {
            $('#advanced-search-block').show();
        }
        else {
            $('#advanced-search-block').hide();
        }
    }
</script>

<div class="col-12">

    <h2 class="generalTitle">@T("Search")</h2>
    <div class="search-input">
        @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get))
            {
            <div class="fieldset">
                <div class="form-fields">
                    <div class="basic-search">
                        <div class="inputs">
                            @Html.LabelFor(model => model.q, new { }, ":")
                            @Html.TextBoxFor(model => model.q, new { @class = "form-control search-text" })
                        </div>
                        @Html.Widget("productsearch_page_basic")
                        <div class="inputs reversed">
                            <label for="adv" class="custom-control custom-checkbox">
                                <span class="sr-only">adv</span>
                                @Html.CheckBoxFor(model => model.adv, new { @class = "custom-control-input" })
                                <span class="custom-control-indicator"></span>
                                <span class="custom-control-description">@T("search.advancedsearch")</span>
                            </label>
                        </div>
                    </div>
                    <div class="advanced-search" id="advanced-search-block">
                        @if (Model.AvailableCategories.Count > 0)
                        {
                            <div class="inputs">
                                @Html.LabelFor(model => model.cid, new { }, ":")
                                @Html.DropDownListFor(model => model.cid, Model.AvailableCategories, new { @class = "form-control" })
                            </div>
                            <div class="inputs reversed">
                                <label for="isc" class="custom-control custom-checkbox">
                                    <span class="sr-only">isc</span>
                                    @Html.CheckBoxFor(model => model.isc, new { @class = "custom-control-input" })
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">@T("admin.catalog.products.list.searchincludesubcategories.hint")</span>
                                </label>

                            </div>
                        }
                        @if (Model.AvailableManufacturers.Count > 0)
                        {
                            <div class="inputs">
                                @Html.LabelFor(model => model.mid, new { }, ":")
                                @Html.DropDownListFor(model => model.mid, Model.AvailableManufacturers, new { @class = "form-control mb-3" })
                            </div>
                        }
                        @if (Model.asv && Model.AvailableVendors.Count > 0)
                        {
                            <div class="inputs">
                                @Html.LabelFor(model => model.vid, new { }, ":")
                                @Html.DropDownListFor(model => model.vid, Model.AvailableVendors, new { @class = "form-control mb-3" })
                            </div>
                        }

                        <div class="inputs pt-1">
                            <div class="flex-sm-row">
                                <label class="col-12 px-0 mt-1">@T("Search.PriceRange"):</label>
                                <div class="price-range flex-sm-row row">
                                    <div class="col">
                                        @Html.LabelFor(model => model.pf)
                                        @Html.TextBoxFor(model => model.pf, new { @class = "form-control price-from" })
                                    </div>

                                    <div class="col">
                                        @Html.LabelFor(model => model.pt)
                                        @Html.TextBoxFor(model => model.pt, new { @class = "form-control price-to" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="inputs reversed">
                            <label for="sid" class="custom-control custom-checkbox">
                                @Html.CheckBoxFor(model => model.sid, new { @class = "custom-control-input" })
                                <span class="custom-control-indicator"></span>
                                <span class="custom-control-description">@T("search.searchindescriptions")</span>
                            </label>
                        </div>
                        @Html.Widget("productsearch_page_advanced")
                    </div>
                </div>
            </div>
            <div class="buttons mt-1 mb-1">
                <input type="submit" class="btn btn-success search-button" value="@T("Search.Button")" />
            </div>
        }
    </div>
</div>
@Html.Widget("productsearch_page_before_results")
<div class="search-results">

    @if (Model.Products.Count > 0)
            {
        <div class="col">
            @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
        </div>
    }
    @Html.Widget("productsearch_page_before_results")
    @if (!String.IsNullOrEmpty(Model.Warning))
            {
        <div class="warning text-danger pt-1 pb-1">
            @Model.Warning
        </div>
    }
    @if (Model.NoResults)
            {
        <div class="no-result text-danger text-center pt-1 pb-1">
            @T("Search.NoResultsText")
        </div>
    }

    @if (Model.Products.Count > 0)
            {
                if (Model.PagingFilteringContext.ViewMode == "grid")
                {
            <div class="col-12">
                <div class="row flex-grid">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            @Html.Partial("_ProductBox", product)
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="search-results-box col-12">
                <div class="row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-12 Boxlist pb-1">
                            @Html.Partial("_ProductBoxList", product)
                        </div>
                    }
                </div>
            </div>
        }
    }
    @{
        var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("adv").BooleanParameterName("isc").BooleanParameterName("sid").RenderEmptyParameters(true);
    }
    @if (!pager.IsEmpty())
    {
        <div class="pager">
            @pager
        </div>
    }
</div>
@Html.Widget("productsearch_page_after_results")