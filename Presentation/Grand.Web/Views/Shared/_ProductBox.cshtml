@model ProductOverviewModel
@using Grand.Core
@using Grand.Core.Domain.Orders
@using Grand.Core.Domain.Tax
@using Grand.Core.Infrastructure
@using Grand.Web.Models.Catalog;
@using Grand.Core.Domain.Catalog
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

<div class="card gen" data-productid="@Model.Id">
    <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
        <img class="card-img-top img-fluid" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
    </a>
    <div class="card-block">
        <h3 class="h6 card-title">
            <strong><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">@Model.Name</a></strong>
            @*if (EngineContextExperimental.Current.Resolve<CatalogSettings>().ShowSkuOnCatalogPages && !string.IsNullOrEmpty(Model.Sku))
                {
                        <span class="d-block py-1">@Model.Sku</span>
                }*@
        </h3>
        @*Html.Widget("productbox_addinfo_before", Model.Id)*@


        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
            {
                int ratingPercent = 0;
                if (Model.ReviewOverviewModel.TotalReviews != 0)
                {
                    ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                }
                <div class="col-12 px-0">
                    <div class="product-rating-box">
                        @*title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">*@
                        <div class="rating rating_@Model.Id">
                        </div>
                        <script type="text/javascript">
                                $(document).ready(function () {
                                    productStarProgress10('@(ratingPercent)', 'rating_@Model.Id');
                                });
                        </script>
                    </div>
                </div>
        }

        @if (!String.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
            {
            <div class="base-price-pangv">
                @Model.ProductPrice.BasePricePAngV
            </div>
        }


        @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
            {
            <div class="col-12 px-0">
                <span class="h6 card-subtitle pb-1 pt-1">
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                </span>
            </div>
        }

        @*Html.Widget("productbox_addinfo_after", Model.Id)*@
        <div class="col-12 px-0">
            <h3 class="h6 card-subtitle mb-3 mt-3">
                <span class="price actual-price">@Model.ProductPrice.Price</span>
            </h3>
        </div>

        @if (Model.ProductPrice.DisplayTaxShippingInfo)
        {
            //var inclTax = EngineContextExperimental.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
            //of course, you can modify appropriate locales to include VAT info there
            <div class="col-12 tax-shipping-info mt-2 mb-2 px-0">
                @* @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))*@
            </div>
        }
        <p class="card-text hidden-xl-down">
            @Html.Raw(Model.ShortDescription)
        </p>
    </div>
    <div class="card-footer pl-0 pr-0">
        <div class="d-flex justify-content-center">
            <div class="btn-group">
                @*<input type="button" value="@T("Products.Details")" class="button-1 product-box-detail-button" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')" />*@
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    //var addToCartText = T("ShoppingCart.AddToCart").Text;
                    //if (Model.ProductPrice.IsRental)
                    //{
                    //    addToCartText = T("ShoppingCart.Rent").Text;
                    //}
                    //if (Model.ProductPrice.AvailableForPreOrder)
                    //{
                    //    addToCartText = T("ShoppingCart.PreOrder").Text;
                    //}


                    

                  
                        <button type="button" class="btn btn-primary" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;">
                            <span class="fa fa fa-shopping-cart"></span> <span class="hidden-lg-down">@**@(addToCartText)</span>
                            <span class="sr-only">AddToCart</span>
                        </button>
                        }
                        @*if (!Model.ProductPrice.DisableAddToCompareListButton)
                            {
                                            <button type="button" value="@T("ShoppingCart.AddToCompareList")" title="@T("ShoppingCart.AddToCompareList")" class="btn btn-secondary" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;">
                                                <span class="sr-only">AddToCompareList</span>
                                                <span class="fa fa-retweet"></span>
                                            </button>
                                        }
                                        @if (!Model.ProductPrice.DisableWishlistButton)
                            {
                                            <button type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="btn btn-secondary" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;">
                                                <span class="fa fa-heart-o"></span>
                                                <span class="sr-only">AddToWishlist</span>
                                            </button>

                                        }*@

</div>
        </div>
    </div>

    @*Html.Widget("productbox_addinfo_middle", Model.Id)*@

</div>