@using Grand.Core.Domain.Common;
@using Grand.Core.Infrastructure;
@using Grand.Core;
@using Grand.Core.Infrastructure
@using Grand.Web.Framework.Themes
@using Grand.Web.Framework.UI
@using Grand.Core.Domain;
@using Microsoft.AspNetCore.Http
@inject StoreInformationSettings storeInformationSettings
@inject CommonSettings commonSettings
@{
    var displayMiniProfiler = storeInformationSettings.DisplayMiniProfilerInPublicStore;

    //X-UA-Compatible tag
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts(string.Format("<meta http-equiv=\"X-UA-Compatible\" content=\"{0}\"/>", commonSettings.XuaCompatibleValue));
    }
}
<!DOCTYPE html>
<html>
@Html.Partial("LanguageAttributes")>
<head>
    <title>@Html.NopTitle(true)</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.NopMetaDescription())" />
    <meta name="keywords" content="@(Html.NopMetaKeywords())" />
    <meta name="generator" content="grandnode" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    @Html.NopHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @Html.Partial("Head")
    @Html.Widget("head_html_tag")
    @Html.NopCssFiles(this.Url, ResourceLocation.Head)
    @Html.NopScripts(this.Url, ResourceLocation.Head)
    @Html.NopCanonicalUrls()
    @*Html.Action("RssHeaderLink", "News")*@
    @*Html.Action("RssHeaderLink", "Blog")*@
    @*Favicon - upload favicon.ico file to the root directory*@
    @*Html.Action("Favicon", "Common")*@
    @if (displayMiniProfiler)
    {
        @*see https://www.nuget.org/packages/StackExchange.Redis.Extensions.Core/*@
        @*@StackExchange.Profiling.MiniProfiler.RenderIncludes()*@
    }
</head>
<body>
    @RenderBody()
    @Html.NopCssFiles(this.Url, ResourceLocation.Foot)
    @Html.NopScripts(this.Url, ResourceLocation.Foot)
</body>
</html>