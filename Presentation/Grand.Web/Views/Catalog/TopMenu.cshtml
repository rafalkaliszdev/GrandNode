@model TopMenuModel
@using Grand.Web.Models.Catalog;

@helper RenderCategoryLine(CategorySimpleModel category, int level, bool responsiveMobileMenu)
{


    @*<text>registered route: </text>@Url.RouteUrl("Category", new { SeName = category.SeName })*@

        <li class="@(category.SubCategories.Count() == 0 ? "nav-item": "nav-item dropdown" )">

            @if (category.SubCategories.Count() > 0)
            {
                <span class="fa fa-angle-down hidden-lg-up text-white" aria-hidden="true"></span>
            }

        <a class="pr-3 pl-3 @(category.SubCategories.Count() == 0 ? "nav-link": "nav-link dropdown-toggle" )  @(category.IncludeInTopMenu ? "": "hidden-lg-up")" href="@Url.RouteUrl("Category", new { SeName = category.SeName })">
            @category.Name
        </a>
                @{
                    //subcategories
                    var subCategories =
                        category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

                    var levelClass = "";
                    if (level == 0)
                    {
                        levelClass = "first-level";
                        <ul class="dropdown-menu @levelClass">
                            @foreach (var subCategory in subCategories)
                            {
                                @*@RenderCategoryLine(subCategory, level + 1, responsiveMobileMenu)*@
                            }
                        </ul>
                    }
                    if (level == 1 && subCategories.Any())
                    {
                        levelClass = "next-level";
                        <ul class="dropdown-menu @levelClass">
                            @foreach (var subCategory in subCategories)
                            {
                                @*@RenderCategoryLine(subCategory, level + 1, responsiveMobileMenu)*@
                            }
                        </ul>
                    }
                }
               </li>
}

    @*@Html.Widget("header_menu_before")
    @if (Model.DisplayHomePageMenu)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("HomePage")">@T("HomePage")</a></li>
    }*@
    @{
        var rootCategories = Model.Categories.ToList();
    }
    @foreach (var category in rootCategories)
    {
        @RenderCategoryLine(category, 0, false)

        //woa
        @*@category.Name <br />*@


    }

    @*@foreach (var topic in Model.Topics)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("Topic", new { SeName=topic.SeName })">@topic.Name</a></li>
    }
    @if (Model.Manufacturers.Any())
    {
        <li class="nav-item dropdown">
            <span class="fa fa-angle-down hidden-lg-up text-white" aria-hidden="true"></span>
            <a class="pr-3 pl-3 nav-link dropdown-toggle" href="@Url.RouteUrl("ManufacturerList")">@T("Manufacturers.Menu")</a>
            <ul class="dropdown-menu first-level">
                @foreach (var manuf in Model.Manufacturers)
                {
                    <li class="nav-item">
                        <a class="pr-3 pl-3 nav-link" href="@Url.RouteUrl("Manufacturer", new { SeName = manuf.SeName })">
                            @manuf.Name
                        </a>
                    </li>
                }
            </ul>
        </li>
    }
    @if (Model.NewProductsEnabled && Model.DisplayNewProductsMenu)
    {
        <li class="nav-item">
            <a class="nav-link" href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a>
        </li>
    }
    @if (Model.DisplaySearchMenu)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
    }
    @if (Model.DisplayCustomerMenu)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
    }
    @if (Model.BlogEnabled && Model.DisplayBlogMenu)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
    }
    @if (Model.ForumEnabled && Model.DisplayForumsMenu)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
    }
    @if (Model.DisplayContactUsMenu)
    {
        <li class="nav-item"><a class="pl-3 nav-link" href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
    }*@
    @*@Html.Widget("header_menu_after")*@

@{
    //var rootCategoriesResponsive = Model.Categories.ToList();
    ////name it "Categories" if we have only categories. Otherwise, "Menu"
    //var responsiveMenuTitle = (rootCategoriesResponsive.Count > 0 && Model.Topics.Count == 0) ? T("Categories") : T("Menu");

    @*<script type="text/javascript">
        $(".nav-item .fa").on('click', function () {
            var x = $(this).siblings("a").attr('href');
            $('a[href$="' + x + '"]').siblings(".first-level").toggleClass('open');
            $('a[href$="' + x + '"]').siblings(".next-level").toggleClass('open');
            $('a[href$="' + x + '"]').parent().siblings().children(".first-level").removeClass("open");
            $('a[href$="' + x + '"]').siblings(".fa").toggleClass("rotate");
            $('a[href$="' + x + '"]').parent(".nav-item").siblings().find(".fa").removeClass("rotate");
        });

        $(".general-opener").on('click', function () {
            $("#generalDropDown").toggle();
        });
    </script>*@
}
