@model ProductsByTagModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(string.Format(T("PageTitle.ProductsByTag").Text, Model.TagName));

    //canonical URL
    var canonicalUrlsEnabled = EngineContextExperimental.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var productsByTagUrl = Url.RouteUrl("ProductsByTag", new { productTagId = Model.Id, SeName = Model.TagSeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productsByTagUrl);
    }
}
@using Grand.Core.Domain.Seo
@using Grand.Core.Infrastructure
@using Grand.Web.Models.Catalog;
<div class="page product-tag-page">
    <h2 class="generalTitle">@String.Format(T("Products.Tags.ProductsTaggedWith").Text, Model.TagName)</h2>
        @Html.Widget("productsbytag_top", Model.Id)
        @if (Model.Products.Count > 0)
        {
            @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary(this.ViewData))
        }
        @Html.Widget("productsbytag_before_product_list", Model.Id)
            @if (Model.Products.Count > 0)
            {
                if (Model.PagingFilteringContext.ViewMode == "grid")
                {
                    <div class="row flex-grid">
                        @foreach (var product in Model.Products)
                        {
                                <div class="col-12 col-md-6 col-lg-4">
                                    @Html.Partial("_ProductBox", product)
                                </div>
                        }
                    </div>
                }
                else
                {
                    <div class="row">
                        @foreach (var product in Model.Products)
                        {
                            <div class="col-12 Boxlist pb-1">
                                @Html.Partial("_ProductBoxList", product)
                            </div>
                        }
                    </div>
                }
            }
            @{
                var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
            }
            @if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
    </div>
        @Html.Widget("productsbytag_bottom", Model.Id)
