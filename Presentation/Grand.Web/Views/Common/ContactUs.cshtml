@model ContactUsModel
@using Grand.Web.Models.Common;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.ContactUs").Text);
}
<div class="page contact-page">
        <h1 class="generalTitle">@T("PageTitle.ContactUs")</h1>
    <div class="generalMarginSupporter text-xs-left">
        @Html.Action("TopicBlock", "Topic", new { systemName = "ContactUs" })
        @Html.Widget("contactus_top")
        @if (Model.SuccessfullySent)
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                var validationSummary = Html.ValidationSummary(true);
                if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                {
                    <div class="message-error">@validationSummary</div>
                }
                    <div class="form-fields">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FullName, new { @class = "col-form-labe" })
                                @Html.TextBoxFor(model => model.FullName, new { @class = "fullname form-control", placeholder = T("ContactUs.FullName.Hint") })
                            @Html.ValidationMessageFor(model => model.FullName)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, new { @class = "col-form-labe" })
                                @Html.TextBoxFor(model => model.Email, new { @class = "email form-control", placeholder = T("ContactUs.Email.Hint") })
                                @Html.ValidationMessageFor(model => model.Email)
                        </div>
                        @if (Model.SubjectEnabled)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Subject, new { @class = "col-form-labe" })
                                    @Html.TextBoxFor(model => model.Subject, new { @class = "subject form-control", placeholder = T("ContactUs.Subject.Hint") })
                                    @Html.ValidationMessageFor(model => model.Subject)
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.Enquiry, new { @class = "col-form-labe" })
                                @Html.TextAreaFor(model => model.Enquiry, new { @class = "enquiry form-control", placeholder = T("ContactUs.Enquiry.Hint") })
                                @Html.ValidationMessageFor(model => model.Enquiry)
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                    </div>
                <div class="buttons mt-1 mb-1">
                    <input type="submit" name="send-email" class="btn btn-success contact-us-button" value="@T("ContactUs.Button")" />
                </div>
            }
        }
        @Html.Widget("contactus_bottom")
    </div>
</div>
