@model CurrencySelectorModel
@using Grand.Web.Models.Common;
@using Grand.Core;
@using Grand.Core.Infrastructure;
@if (Model.AvailableCurrencies.Count > 1)
{
    var webHelper = EngineContextExperimental.Current.Resolve<IWebHelper>();

    var currencies = Model.AvailableCurrencies.Select(x => new 
    {
		Name = x.Name,
        Text = x.CurrencyCode,
        Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeCurrency", new { customercurrency = x.Id }), "returnurl=" + HttpUtility.UrlEncode(HttpContext.Current.Request.RawUrl), null),
        Selected = x.Id.Equals(Model.CurrentCurrencyId)
    });
        <div class="btn-group btn-group-sm float-xs-right ml-1">
            <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown">
                @currencies.FirstOrDefault(x => x.Selected).Text
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <div class="dropdown-menu dropdown-menu-right">
                <ul class="pl-0 mb-0">
                    @foreach (var item in currencies)
                    {
                        <li>
                            <a href="@item.Value">@item.Text</a>
                        </li>
                    }
                    </ul>
            </div>
        </div>
}
