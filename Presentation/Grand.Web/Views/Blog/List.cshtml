@model BlogPostListModel
@using Grand.Web.Models.Blogs;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Blog").Text);
}
@section left {
    @Html.Widget("left_side_column_blog_before")
    @Html.Action("BlogMonths", "Blog")
    @Html.Widget("left_side_column_after_blog_archive")
    @Html.Action("BlogTags", "Blog")
    @Html.Widget("left_side_column_blog_after")
}
<div class="page blog-page mt-1">
    <h1 class="h2 generalTitle">
        <a href="@Url.RouteUrl("BlogRSS", new { languageId = Model.WorkingLanguageId })" class="btn btn-sm btn-outline-success link-rss" title="@T("Blog.RSS.Hint")">@T("Blog.RSS")</a>
        @if (String.IsNullOrEmpty(Model.PagingFilteringContext.Tag))
            {
                if (Model.PagingFilteringContext.GetParsedMonth().HasValue)
                {
                @String.Format(T("Blog.FilteredByMonth").Text, Model.PagingFilteringContext.GetParsedMonth().Value.Year, Model.PagingFilteringContext.GetParsedMonth().Value.ToString("MMMM"))
            }
            else
            {
                @T("Blog")
            }
        }
        else
        {
            @String.Format(T("Blog.TaggedWith").Text, Model.PagingFilteringContext.Tag)
        }
    </h1>
    @Html.Widget("bloglist_page_before_posts")
    <div class="blog-posts">
        @foreach (var item in Model.BlogPosts)
            {
            @Html.Widget("bloglist_page_before_post", item.Id)


            <div class="card mb-3">
                <a class="post-title" href="@Url.RouteUrl("BlogPost", new {SeName = item.SeName})"><h4 class="card-header">@item.Title</h4></a>
                <div class="card-block">
                    <h6 class="card-subtitle text-muted">-@item.CreatedOn.ToString("D")</h6>
                    @Html.Widget("bloglist_page_before_post_body", item.Id)
                    @*//post content*@
                    @Html.Raw(!String.IsNullOrEmpty(item.BodyOverview) ? item.BodyOverview : item.Body)

                    @Html.Widget("bloglist_page_after_post_body", item.Id)
                    @if (item.Tags.Count > 0)
                    {
                        <div class="tags pb-3">
                            <span>@T("Blog.Tags"):</span>

                            @for (int i = 0; i < item.Tags.Count; i++)
                            {
                                var tag = item.Tags[i];

                                <a class="btn btn-sm btn-secondary" href="@Url.RouteUrl("BlogByTag", new {tag = tag})">@tag</a>
                            }
                        </div>
                    }
                    <div class="buttons">
                        @if (item.AllowComments)
                        {
                            <a href="@Url.RouteUrl("BlogPost", new {SeName = item.SeName})#comments" class="btn btn-secondary read-comments">@string.Format(T("Blog.CommentsLink").Text, item.NumberOfComments)</a>
                        }
                        <a href="@Url.RouteUrl("BlogPost", new {SeName = item.SeName})" class="btn btn-secondary read-more">@T("Blog.MoreInfo")</a>
                    </div>
                </div>
                @Html.Widget("bloglist_page_inside_post", item.Id)
            </div>
                @Html.Widget("bloglist_page_after_post", item.Id)
        }
    </div>
    @{
        var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
    }
    @if (!pager.IsEmpty())
    {
        <div class="pager">
            @pager
        </div>
    }
    @Html.Widget("bloglist_page_after_posts")
</div>
